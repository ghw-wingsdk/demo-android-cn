apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    signingConfigs {
        // 测试签名，相应的平台（微信、360、百度、UC）的资源需要自己申请，
        // 测试的key和包名会因为已经申请过会无法申请的情况，请自己修改包名和新建签名文件再申请
        config {
            keyAlias 'pcl-sdk-cert-dev'
            keyPassword '123456'
            storeFile file('../keystores/android-cert-dev.jks')
            storePassword '123456'
        }
        config {
            keyAlias 'ddtank'
            keyPassword 'angame!@#$%^Q123456'
            storeFile file('../keystores/ddtankmobile_cert.jks')
            storePassword 'angame!@#$%^Q123456'
        }
    }

    defaultConfig {
        applicationId "com.ghw.sdk.democn"
        minSdkVersion 15
        targetSdkVersion 18
        versionCode 13
        versionName "1.1.2"
        signingConfig signingConfigs.config
        multiDexEnabled true
        // 这里需要添加placeHolder，Key为PACKAGE_NAME，value为应用包名，详情参考文档说明
        manifestPlaceholders.put('PACKAGE_NAME', applicationId)
    }

    buildTypes {
        release {
            minifyEnabled true
            debuggable true
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'
            // 正式环境地址
            manifestPlaceholders.putAll([SDK_HTTP_BASE_URL:'https://api.wingsdk.cn/sdkapi',
                                         SDK_TRACKING_HTTP_BASE_URL:'https://api.wingsdk.cn/data'])

        }

        debug {
            signingConfig signingConfigs.config
            // 正式环境地址
            manifestPlaceholders.putAll([SDK_HTTP_BASE_URL:'https://api.wingsdk.cn/sdkapi',
                                         SDK_TRACKING_HTTP_BASE_URL:'https://api.wingsdk.cn/data'])
        }
    }

    productFlavors {
        tst {
            manifestPlaceholders.putAll([SDK_HTTP_BASE_URL:'https://api.wingsdk.cn/sdkapi',
                                         SDK_TRACKING_HTTP_BASE_URL:'https://api.wingsdk.cn/data'])
        }

        prod {
            manifestPlaceholders.putAll([SDK_HTTP_BASE_URL:'https://api.wingsdk.cn/sdkapi',
                                         SDK_TRACKING_HTTP_BASE_URL:'https://api.wingsdk.cn/data'])
        }
    }

    // 打包自动生成名字
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            if (variant.buildType.name.equals('release')) {
                def oldFile = output.outputFile
                def newName = 'WASdkDemo_cn_' + variant.productFlavors[0].name + "_" + variant.buildType.name + '_v' + versionName + '_build' + getDate() + '.apk'
                output.outputFile = new File(oldFile.parent, newName)
            }
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

//获取时间戳
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

repositories {
    flatDir {
        dirs "libs"
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:support-v4:23.1.1'

    // 基础模块（必选）
    compile 'com.wa.sdkcn:wa-sdk-base:1.1.4'
    // 核心模块（必选）
    compile 'com.wa.sdkcn:wa-sdk-core:1.1.4'
    // 网页支付模块（可选）
//    compile 'com.wa.sdkcn:wa-sdk-webpay:1.1.4'
    // 应用墙模块（可选）
//    compile 'com.wa.sdkcn:wa-sdk-apw:1.1.4'
    // 微信模块（可选）
//    compile 'com.wa.sdkcn:wa-sdk-wechat:1.1.4'
    // 360模块（可选，不可与其他可选模块混合使用）
//    compile 'com.wa.sdkcn:wa-sdk-360:1.1.4'
    // 百度模块（可选，不可与其他可选模块混合使用）
//    compile 'com.wa.sdkcn:wa-sdk-baidu:1.1.4'
    // UC（可选，不可与其他可选模块混合使用）
}
